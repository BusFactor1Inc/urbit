Chars
--
  bar   |       
  bec   $       
  bon   =       
  bot   '       
  cab   _       
  cam   ,       
  cas   ?       
  dap   -     
  dax   #       
  deg   :       
  den   [
  des   {
  dot   .       
  dul   <
  ket   ^
  lep   (       
  lud   >
  mit   %       
  nat   @     
  ned   ]
  pam   &       
  ped   +
  pel   )
  sac   \
  sed   }
  sig   ~
  sol   /
  tam   ;       
  tar   *
  tic   `
  tol   "
  zap   !       

  ace  == whitespace, " " or "\n" in any quantity

Watt GTO: Gran Tabula Operazioni 

(Copied from watt.watt - any discrepancies favor watt.watt.)

Gene - AST
::::
::
    gene
  |?
    ^:(@ *term)
    [~ p=^:(@ *axis)]
  ::
    [%bndl p=*gene q=*gene]                                     ::  =<  bondul
    [%bnnp p=*gene q=*gene]                                     ::  =-  bonnap
    [%bnpd p=*gene q=*gene]                                     ::  =+  bonpad
    [%bnld p=*gene q=*gene]                                     ::  =>  bonlud
  ::
    [%brbn p=*gene]                                             ::  |=  barbon
    [%brcs p=*(list gene)]                                      ::  |?  barcas
    [%brdg p=*gene]                                             ::  |:  bardeg
    [%brdl p=*gene q=*gene]                                     ::  |<  bardul
    [%brmt p=*(list &[p=*term q=*gene])]                        ::  |%  barmit
    [%brnp p=*gene]                                             ::  |-  barnep
    [%brsr p=*(list &[p=*term q=*gene])]                        ::  |*  barsar
    [%brsg p=*gene q=*(list gene)]                              ::  |~  barsig
    [%brld p=*gene q=*gene]                                     ::  |>  barlud
  ::
    [%csbn p=*gene q=*gene]                                     ::  ?=  casbon
    [%csbr p=*(list gene)]                                      ::  ?|  casbar
    [%csdg p=*gene q=*gene r=*gene]                             ::  ?:  casdeg
    [%csdl p=*gene q=*gene]                                     ::  ?<  casdul
    [%csdt p=*gene q=*gene r=*gene]                             ::  ?.  casdot
    [%csld p=*gene q=*gene]                                     ::  ?>  caslud
    [%csnp p=*gene q=*(list &[p=*gene q=*gene])]                ::  ?-  casnep
    [%cspm p=*(list gene)]                                      ::  ?&  caspam
    [%cssr p=*gene q=*(list gene)]                              ::  ?*  cassar
    [%cssg p=*gene q=*gene r=*gene]                             ::  ?~  cassig
    [%cszp p=*gene]                                             ::  ?!  caszap
  ::
    [%dgkt p=*gene q=*gene r=*gene s=*gene]                     ::  :^  degket
    [%dgnp p=*gene q=*gene]                                     ::  :-  degnep
    [%dgpd p=*gene q=*gene r=*gene]                             ::  :+  degpad
    [%dgsr p=*(list gene)]                                      ::  :*  degsar
    [%dgsg p=*(list gene)]                                      ::  :~  degsig
  :: 
    [%dtbn p=*gene q=*gene]                                     ::  .=  dotbon
    [%dtkt p=*gene]                                             ::  .^  dotket
    [%dtcs p=*gene]                                             ::  .?  dotcas
    [%dtsr p=*gene q=*gene]                                     ::  .*  dotsar
    [%dtsg p=*]                                                 ::  .~  dotsig
  ::
    [%ktbn p=*term q=*gene]                                     ::  ^=  ketbon
    [%ktdl p=*<@ [p=@ q=*gene]> q=*gene]                        ::  ^<  ketdul
    [%ktnp p=*gene q=*gene]                                     ::  ^-  ketnep
    [%ktpd p=*gene q=*gene]                                     ::  ^+  ketpad
    [%ktld p=*<@ [p=@ q=*gene]> q=*gene]                        ::  ^>  ketlud
    [%ktsr p=*gene]                                             ::  ^*  ketsar
    [%ktsg p=*gene]                                             ::  ^~  ketsig
  ::
    [%mtbn p=*rope q=*(list &[p=*gene q=*gene])]                ::  %=  mitbon
    [%mtbr p=*rope q=*gene r=*(list &[p=*gene q=*gene])]        ::  %|  mitbar
    [%mtdg p=*gene q=*gene]                                     ::  %:  mitdeg
    [%mtdt p=*gene q=*gene]                                     ::  %.  mitdot
    [%mtkt p=*gene q=*gene r=*gene s=*gene]                     ::  %^  mitket
    [%mtnp p=*gene q=*(list gene)]                              ::  %-  mitnep  
    [%mtpd p=*gene q=*gene r=*gene]                             ::  %+  mitpad
    [%mtsr p=*gene]                                             ::  %*  mitsar
    [%mtsg p=*rope q=*gene r=*gene]                             ::  %~  mitsig
  ::
    [%tmbn p=*<%atom %blur %cell %flag %null>]                  ::  ;=  tambon
    [%tmpd p=*gene q=*gene]                                     ::  ;+  tampad
    [%tmnp p=*gene]                                             ::  ;-  tamnep
  ::
    [%zpbn p=*gene]                                             ::  !=  zapbon
    [%zpdx p=*gene]                                             ::  !#  zapdax
    [%zpcb p=*spot q=*gene]                                     ::  !_  zapcab
    [%zpzp ~]                                                   ::  !!  zapzap
  ==
  ::
    axis  &@
    bank  (list gene)
    cord  *<^+(@ *term) [%frag p=*axis] [%pith p=*term] [%port p=*term]>
    door  &[p=*axis q=*type r=*gene]
    home  (list term)
    menu  (list &[p=*term q=*gene])
    plan  &[p=*axis q=*(unit door) r=*type]
    rack  (list &[p=*gene p=*gene])
    rope  (list cord)
    spec  *<[%none ~] [%leaf p=*term q=*gene] [p=^+(^ *spec) q=*spec]>
    spot  &[p=[p=@ q=@] [[p=@ q=@]]
  ::

Nock formula
  ::
  ::::::::
  ::
      tool
    |?
      [%0 p=@]
      [%1 p=*]
      [%2 p=*tool q=*tool r=*tool]
      [%3 p=*tool q=*tool]
      [%4 p=*tool]
      [%5 p=*tool]
      [%6 p=*tool q=*tool]
      [p=^+(^ *tool) q=*tool]
    ==

Type
::::
::
    type
  |?
    %atom
    %blur
    %blot
    [%cell p=*type q=*type]
  :: [%core p=*type q=*<| & [| p=*type] [& p=*type]> r=*(book term gene)]
  ::
    :*  %core
        p=*type
        q=*<%blue [%gray p=*type] %pink [%teal p=*type]> 
        r=*(book term gene)
    --
  ::
    [%cube p=*]
    [%face p=*term q=*type]
    [%fork p=*type q=*type]
    [%hold p=*type q=*gene]
  --
  ::
  ::::::::
  ::
      type
    |?
      %blur
      %blot
      %atom
      [%cell p=*type q=*type]
      [%core p=*type q=*<[%mono p=*spec] [%poly p=*type q=*spec]>]
      [%cube p=*]
      [%face p=*term q=*type]
      [%fork p=*type q=*type]
      [%fuse p=*type q=*type]
      [%hold p=*type q=*gene]
    ==
  ::


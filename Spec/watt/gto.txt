Watt GTO: Gran Tabula Operazioni 

(Copied from watt.watt - any discrepancies favor watt.watt.)

Gene - AST
::::
::
    gene
  |?
    ^+(@ *term)
    [~ p=^+(@ *axis)]
  ::
    [%bndv p=*gene q=*gene]                                     ::  =<  bendev
    [%bnnb p=*gene q=*gene]                                     ::  =-  bennub
    [%bnpd p=*gene q=*gene]                                     ::  =+  benpod
    [%bnvd p=*gene q=*gene]                                     ::  =>  benved
  ::
    [%brbn p=*gene]                                             ::  |=  barben
    [%brdg p=*gene]                                             ::  |:  bardig
    [%brmt p=*(list &[p=*term q=*gene])]                        ::  |%  barmit
    [%brnb p=*gene]                                             ::  |-  barnub
    [%brrs p=*(list &[p=*term q=*gene])]                        ::  |*  barras
    [%brsg p=*gene q=*(list gene)]                              ::  |~  barsig
    [%brsk p=*(list gene)]                                      ::  |?  barask
  ::
    [%dght p=*gene q=*gene r=*gene s=*gene]                     ::  :^  dighat
    [%dgnb p=*gene q=*gene]                                     ::  :-  dignub
    [%dgpd p=*gene q=*gene r=*gene]                             ::  :+  digpod
    [%dgrs p=*(list gene)]                                      ::  :*  digras
    [%dgsg p=*(list gene)]                                      ::  :~  digsig
  :: 
    [%dtbn p=*gene q=*gene]                                     ::  .=  dotben
    [%dtht p=*gene]                                             ::  .^  dothat
    [%dtrs p=*gene q=*gene]                                     ::  .*  dotras
    [%dtsg p=*]                                                 ::  .~  dotsig
    [%dtsk p=*gene]                                             ::  .?  dotask
  ::
    [%hpbn p=*gene]                                             ::  !=  hopben
    [%hpdg p=*gene]                                             ::  !:  hopdig
    [%hpdx p=*gene]                                             ::  !#  hopdax
    [%hphp ~]                                                   ::  !!  hophop
    [%hpmt ~]                                                   ::  !%  hopmit
    [%hptc p=*gene]                                             ::  !`  hoptic
  ::
    [%htbn p=*term q=*gene]                                     ::  ^=  hatben
    [%htdg p=*gene q=*gene]                                     ::  ^:  hatdig
    [%htdv p=*<@ [p=@ q=*gene]> q=*gene]                        ::  ^<  hatdev
    [%htmt p=*gene q=*gene]                                     ::  ^%  hatmit
    [%htnb p=*gene q=*gene]                                     ::  ^-  hatnub
    [%htpd p=*gene q=*gene]                                     ::  ^+  hatpod
    [%htvd p=*<@ [p=@ q=*gene]> q=*gene]                        ::  ^>  hatved
    [%htrs p=*gene]                                             ::  ^*  hatras
    [%htsg p=*gene]                                             ::  ^~  hatsig
  ::
    [%lmbn p=*<%atom %blur %cell %flag %null>]                  ::  ;=  lomben
    [%lmnb p=*gene]                                             ::  ;-  lomnub
    [%lmpd p=*gene]                                             ::  ;+  lompod
  ::
    [%mtbn p=*rope q=*(list &[p=*gene q=*gene])]                ::  %=  mitben
    [%mtbr p=*rope q=*gene r=*(list &[p=*gene q=*gene])]        ::  %|  mitbar
    [%mtdg p=*gene q=*gene]                                     ::  %:  mitdig
    [%mtdt p=*gene q=*gene]                                     ::  %.  mitdot
    [%mtht p=*gene q=*gene r=*gene s=*gene]                     ::  %^  mithat
    [%mtmp p=*term]                                             ::  %&  mitamp
    [%mtnb p=*gene q=*(list gene)]                              ::  %-  mitnub  
    [%mtpd p=*gene q=*gene r=*gene]                             ::  %+  mitpod
    [%mtrs p=*gene]                                             ::  %*  mitras
    [%mtsg p=*rope q=*gene r=*gene]                             ::  %~  mitsig
  ::
    [%skbn p=*gene q=*gene]                                     ::  ?=  askben
    [%skbr p=*(list gene)]                                      ::  ?|  askbar
    [%skdg p=*gene q=*gene r=*gene]                             ::  ?:  askdig
    [%skdv p=*gene q=*gene]                                     ::  ?<  askdev
    [%skdt p=*gene q=*gene r=*gene]                             ::  ?.  askdot
    [%skhp p=*gene]                                             ::  ?!  askhop
    [%skmp p=*(list gene)]                                      ::  ?&  askamp
    [%sknb p=*gene q=*(list &[p=*gene q=*gene])]                ::  ?-  asknub
    [%skvd p=*gene q=*gene]                                     ::  ?>  askved
    [%skrs p=*gene q=*(list gene)]                              ::  ?*  askras
    [%sksg p=*gene q=*gene r=*gene]                             ::  ?~  asksig
  ==

  ::
    axis  &@
    bank  (list gene)
    cord  *<^+(@ *term) [%frag p=*axis] [%pith p=*term] [%port p=*term]>
    door  &[p=*axis q=*type r=*gene]
    home  (list term)
    menu  (list &[p=*term q=*gene])
    plan  &[p=*axis q=*(unit door) r=*type]
    rack  (list &[p=*gene p=*gene])
    rope  (list cord)
    spec  *<[%none ~] [%leaf p=*term q=*gene] [p=^+(^ *spec) q=*spec]>
    spot  &[p=[p=@ q=@] [[p=@ q=@]]
  ::

Nock formula
  ::
  ::::::::
  ::
      tool
    |?
      [%0 p=@]
      [%1 p=*]
      [%2 p=*tool q=*tool r=*tool]
      [%3 p=*tool q=*tool]
      [%4 p=*tool]
      [%5 p=*tool]
      [%6 p=*tool q=*tool]
      [p=^%(^ *tool) q=*tool]
    ==

Tack: change to data
  ::
  ::::::::
  ::
      tack
    |?
      ~ 
      [%leaf p=*type] 
      [%name p=*term q=*tack] 
      [%pair p=*tack q=*tack]
    ==

Type
  ::
  ::::::::
  ::
      type
    |?
      %blur
      %blot
      %atom
      [%cell p=*type q=*type]
      [%core p=*type q=*<[%mono p=*spec] [%poly p=*type q=*spec]>]
      [%cube p=*]
      [%face p=*term q=*type]
      [%fork p=*type q=*type]
      [%fuse p=*type q=*type]
      [%hold p=*type q=*gene]
    ==
  ::

Axes
--
  be - 2  to + 3  ga < 2  lu > 3 

  -+<>  "betogalu"  .21

Signs (ven = repeat)
--
  amp   &       dig   :       nub   -     toq   "
  ask   ?       dot   .       pat   @     ved   >
  bar   |       dus   }       pel   )
  ben   =       hat   ^       pod   +
  bot   '       hop   !       ras   *
  buc   $       lep   (       sac   \
  cab   _       lom   ;       sig   ~
  com   ,       mit   %       sol   /
  dax   #       mon   ]       sud   {
  dev   <       nom   [       tic   `

  ace  == " "
  lit  == "\n"
  bosh == "::"


Watt GTO: Gran Tabula Operazioni 

(Copied from watt.watt - any discrepancies favor it.)

Gene - AST
      gene
    |?
      [%bail ~]                                   ::  !!  hopven
      [%dbug p=*gene q=*gene]                     ::  !#  hopdax
      [%spot p=*spot q=*gene]
      [%home p=*term q=*gene]
    ::
      [%else p=*gene q=*gene]                     ::  ?<  askder
      [%flip p=*gene]                             ::  ?!  askhop
      [%lest p=*gene q=*gene r=*gene]             ::  ?.  askdot
      [%like p=*gene q=*gene]                     ::  ?=  askben
      [%mesh p=*gene q=*bank]                     ::  ?*  askras
      [%reef q=*gene *rack]                       ::  ?+  askpod
      [%sand p=*bank]                             ::  ?&  askamp
      [%sift p=*gene q=*rack]                     ::  ?-  asknub
      [%some p=*bank]                             ::  ?|  askbar
      [%step p=*gene q=*gene r=*gene]             ::  ?~  asksig
      [%test p=*gene q=*gene r=*gene]             ::  ?:  askdig
      [%then p=*gene q=*gene]                     ::  ?>  askred
    ::
      [%bond p=*gene q=*bank]                     ::  |~  barsig
      [%gate p=*gene]                             ::  |=  barben
      [%lift p=*menu]                             ::  |%  barmit
      [%load p=*menu]                             ::  |*  barras
      [%loop p=*gene]                             ::  |-  barnub
      [%pick p=*bank]                             ::  |?  barask
      [%slam p=*gene]                             ::  |:  bardig
    ::
      [%knit p=*gene q=*gene]                     ::  =<  bender
      [%link p=*gene q=*gene]                     ::  =>  benred
      [%pull p=*gene q=*gene]                     ::  =-  bennub
      [%push p=*gene q=*gene]                     ::  =+  benpod
    ::
      [%cage p=*bank]                             ::  :*  digras
      [%cell p=*gene q=*gene]                     ::  :-  dignub
      [%qual p=*gene q=*gene r=*gene s=*gene]     ::  :^  digmit
      [%trel p=*gene q=*gene r=*gene]             ::  :+  digpod
    ::
      [%bump p=*gene]                             ::  .^  dothat
      [%deep p=*gene]                             ::  .?  dotask
      [%nock p=*gene]                             ::  .*  dotras
      [%twin p=*gene]                             ::  .=  dotben
    ::
      [%cast p=*gene q=*gene]                     ::  ^-  hatnub
      [%clip p=*gene q=*gene]                     ::  ^%  hatmit
      [%cool p=*gene]                             ::  ^~  hatsig
      [%name p=*term q=*gene]                     ::  ^=  hatben
      [%sure p=*gene q=*gene]                     ::  ^+  hatpod
      [%wash p=*gene]                             ::  ^*  hatras
    ::
      [%coin p=*gene]                             ::  ;-  lomnub
      [%grip p=*gene]                             ::  ;+  lompod
    ::
      [%call p=*gene q=*gene]                     ::  %-  mitnub  
      [%poke p=*gene q=*gene]                     ::  %_  mitcab
      [%punt p=*gene]                             ::  %*  mitras
      [%talk p=*gene q=*gene]                     ::  %.  mitdot
      [%take p=*gene q=*rack]                     ::  %=  mitben
      [%howl p=*gene q=*gene r=*gene]             ::  %+  mitpod
      [%wail p=*gene q=*gene r=*gene s=*gene]     ::  %^  mithat
      [%yell p=*gene q=*bank]                     ::  %~  mitsig
    ::
      [%base p=*<%atom %blur %cell %flag %null>]  ::  @vat *ras ^hat ?ask ~sig
      [%frag p=*axis]
      [%port p=*term]
      [%rock p=*]
    ==
Misc
  ::
    axis  &@
    bank  (list gene)
    cord  *<^+(@ *term) [%frag p=*axis] [%pith p=*term] [%port p=*term]>
    door  &[p=*axis q=*type r=*gene]
    home  (list term)
    menu  (list &[p=*term q=*gene])
    plan  &[p=*axis q=*(unit door) r=*type]
    rack  (list &[p=*gene p=*gene])
    rope  (list cord)
    spec  *<[%none ~] [%leaf p=*term q=*gene] [p=^+(^ *spec) q=*spec]>
    spot  &[p=[p=@ q=@] [[p=@ q=@]]
  ::

Nock formula
  ::
  ::::::::
  ::
      tool
    |?
      [%0 p=@]
      [%1 p=*]
      [%2 p=*tool q=*tool r=*tool]
      [%3 p=*tool q=*tool]
      [%4 p=*tool]
      [%5 p=*tool]
      [%6 p=*tool q=*tool]
      [p=^%(^ *tool) q=*tool]
    ==

Tack: change to data
  ::
  ::::::::
  ::
      tack
    |?
      ~ 
      [%leaf p=*type] 
      [%name p=*term q=*tack] 
      [%pair p=*tack q=*tack]
    ==

Type
  ::
  ::::::::
  ::
      type
    |?
      %blur
      %blot
      %atom
      [%cell p=*type q=*type]
      [%core p=*type q=*<[%mono p=*spec] [%poly p=*type q=*spec]>]
      [%cube p=*]
      [%face p=*term q=*type]
      [%fork p=*type q=*type]
      [%fuse p=*type q=*type]
      [%hold p=*type q=*gene]
    ==
  ::

Axes
--
  be - 2  to + 3  ga < 2  lu > 3 

  -+<>  "betogalu"  .21

Signs (ven = repeat)
--
  amp   &       der   <       nub   -     tep   "
  ask   ?       dot   .       pel   )     vat   @
  bar   |       dus   }       pod   +
  ben   =       hat   ^       ras   *
  buc   $       hop   !       red   >
  bup   '       lom   ;       sac   \
  cab   _       lep   (       sol   /
  com   ,       mit   %       sud   {
  dax   #       mon   ]       sig   ~
  dig   :       nom   [       tic   `

  ace  == " "
  lit  == "\n"
  bosh == "::"


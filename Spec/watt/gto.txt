Watt GTO: Gran Tabula Operazioni 

(Copied from watt.watt - any discrepancies favor watt.watt.)

Gene - AST
    gene
  |?
  ::
    [%bean p=*<%atom %blur %cell %flag %null>]
    [%bone p=*]
    [%frag p=*axis]
    [%pane p=*term]
  ::
    [%chan p=*bank]                             ::  ?&  askamp
    [%dorn p=*bank]                             ::  ?|  askbar
    [%fent p=*gene q=*gene r=*gene]             ::  ?~  asksig
    [%grel p=*gene q=*rack]                     ::  ?-  asknub
    [%gram p=*gene q=*gene]                     ::  ?>  askred
    [%lort p=*gene q=*gene r=*gene]             ::  ?.  askdot
    [%marg p=*gene q=*gene]                     ::  ?<  askder
    [%plin p=*gene q=*gene]                     ::  ?=  askben
    [%moze p=*gene q=*bank]                     ::  ?*  askras
    [%trol p=*gene q=*gene r=*gene]             ::  ?:  askdig
    [%vern p=*gene]                             ::  ?!  askhop
  ::
    [%lonk p=*gene q=*bank]                     ::  |~  barsig
    [%lome p=*prop q=*gene]                     ::  |=  barben
    [%pank p=*prop q=*menu]                     ::  |*  barras
    [%rond p=*bank]                             ::  |?  barask
    [%sunt p=*prop q=*gene]                     ::  |:  bardig
    [%tash p=*prop q=*menu]                     ::  |%  barmit
    [%vamp p=*prop q=*gene]                     ::  |-  barnub
  ::
    [%claf p=*gene q=*gene]                     ::  =<  bender
    [%flac p=*gene q=*gene]                     ::  =>  benred
    [%gant p=*gene q=*gene]                     ::  =+  benpod
    [%tang p=*gene q=*gene]                     ::  =-  bennub
  ::
    [%prex p=*bank]                             ::  :*  digras
    [%slax p=*bank]                             ::  :~  digsig
    [%quax p=*gene q=*gene r=*gene s=*gene]     ::  :^  dighat
    [%trex p=*gene q=*gene r=*gene]             ::  :+  digpod
    [%twix p=*gene q=*gene]                     ::  :-  dignub
  ::
    [%dust p=*gene]                             ::  .?  dotask
    [%sail p=*gene q=*gene]                     ::  .*  dotras
    [%sing p=*gene q=*gene]                     ::  .=  dotben
    [%vint p=*gene]                             ::  .^  dothat
  ::
    [%bran p=*term q=*gene]                     ::  ^=  hatben
    [%cast p=*gene q=*gene]                     ::  ^-  hatnub
    [%germ p=*gene q=*gene]                     ::  ^$  hatbuc
    [%hint p=*gene q=*gene]                     ::  ^?  hatask
    [%grit p=*gene]                             ::  ^@  hatpat
    [%mave p=*gene]                             ::  ^*  hatras
    [%pock p=*gene q=*gene]                     ::  ^+  hatdig
    [%stil p=*gene q=*gene]                     ::  ^:  hatpod
    [%velt p=*gene q=*gene]                     ::  ^%  hatmit
    [%wost p=*gene]                             ::  ^~  hatsig
  ::
    [%fist p=*gene]                             ::  ;+  lompod
    [%mast p=*gene]                             ::  ;-  lomnub
  ::
    [%bung p=*gene q=*gene r=*gene]             ::  %+  mitpod
    [%fung p=*gene q=*bank]                     ::  %-  mitnub  
    [%hang p=*rope q=*gene r=*gene]             ::  %~  mitsig
    [%gath p=*rope q=*gene r=*rack]             ::  %|  mitbar
    [%gnum p=*gene q=*gene]                     ::  %.  mitdot
    [%mack p=*rope q=*rack]                     ::  %=  mitben
    [%mung p=*gene q=*gene]                     ::  %:  mitdig
    [%teck p=*gene]                             ::  %*  mitras
    [%tung p=*gene q=*gene r=*gene s=*gene]     ::  %^  mithat
  ::
    [%zalt p=*gene]                             ::  !:  hopdig
    [%zond p=*gene]                             ::  !=  hopben
    [%zemp p=*spot q=*gene]
    [%zike ~]                                   ::  !!  hopven
    [%zoot ~]                                   ::  !%  hopmit
    [%zole p=*gene]                             ::  !`  hoptic
    [%zush p=*gene]                             ::  !#  hopdax
  ==
Misc
  ::
    axis  &@
    bank  (list gene)
    cord  *<^+(@ *term) [%frag p=*axis] [%pith p=*term] [%port p=*term]>
    door  &[p=*axis q=*type r=*gene]
    home  (list term)
    menu  (list &[p=*term q=*gene])
    plan  &[p=*axis q=*(unit door) r=*type]
    rack  (list &[p=*gene p=*gene])
    rope  (list cord)
    spec  *<[%none ~] [%leaf p=*term q=*gene] [p=^+(^ *spec) q=*spec]>
    spot  &[p=[p=@ q=@] [[p=@ q=@]]
  ::

Nock formula
  ::
  ::::::::
  ::
      tool
    |?
      [%0 p=@]
      [%1 p=*]
      [%2 p=*tool q=*tool r=*tool]
      [%3 p=*tool q=*tool]
      [%4 p=*tool]
      [%5 p=*tool]
      [%6 p=*tool q=*tool]
      [p=^%(^ *tool) q=*tool]
    ==

Tack: change to data
  ::
  ::::::::
  ::
      tack
    |?
      ~ 
      [%leaf p=*type] 
      [%name p=*term q=*tack] 
      [%pair p=*tack q=*tack]
    ==

Type
  ::
  ::::::::
  ::
      type
    |?
      %blur
      %blot
      %atom
      [%cell p=*type q=*type]
      [%core p=*type q=*<[%mono p=*spec] [%poly p=*type q=*spec]>]
      [%cube p=*]
      [%face p=*term q=*type]
      [%fork p=*type q=*type]
      [%fuse p=*type q=*type]
      [%hold p=*type q=*gene]
    ==
  ::

Axes
--
  be - 2  to + 3  ga < 2  lu > 3 

  -+<>  "betogalu"  .21

Signs (ven = repeat)
--
  amp   &       dig   :       nub   -     tic   `
  ask   ?       dot   .       pat   @     toq   "
  bar   |       dus   }       pel   )
  ben   =       hat   ^       pod   +
  bot   '       hop   !       ras   *
  buc   $       lep   (       red   >
  cab   _       lom   ;       sac   \
  com   ,       mit   %       sig   ~
  dax   #       mon   ]       sol   /
  der   <       nom   [       sud   {

  ace  == " "
  lit  == "\n"
  bosh == "::"


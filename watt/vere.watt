:: =>  !%
=>  plow
=+  rasp
=+  sul=`[p=*type q=*]`[seed ..watt]
|*  
    vere  .
::
::::  Molds and cases
::::
::
    knob  &~
    goal  &[p=*knob q=*sink r=*well]
    soul  &[p=*type q=*]
    unix  (list term:plow)
    merd  <[%turd p=*soul]>
::::
::
    sink
  |?
    %crud
    :: %type
    :: %good
    :: [%post p=*term]
    :: [%dump p=*term q=*unix]
  ==
::::
::
    well
  |?
    :: [%blob p=*unix q=@ r=*term s=*text]
    :: [%code p=*unix q=*text]
    :: [%text p=*text]
    [%gene p=*gene]
    :: [%noun p=*]
  ==
::
::::  Scanners
::::
::          virc: scan to goal
    virc
  |~  pose
    harc
    (cook =+(* |:([~ %crud -<])) (stag %gene scry))
  ==
::::
::          harc: scan suffix
    harc
  =+  doc=tube
  |=
  =+  vex=(remp doc)
  ?-  -.vex
      |   vex
  ::
      &
    %.(q.vex (noft p.p.vex (slun q.p.vex (pran r.p.vex))))
  ==
::::
::          pran: scan well
    pran
  =+  byx=*well
  |=
  =+  doc=tube
  |=
  ^-  *(edge well)
  ?-  byx
    [%gene *]   %.(doc |~(pfix gap (stag %gene scry)))
  ==
::::
::          slun: scan sink and well
    slun
  =+  [wub=*sink nad=rule]
  |:
  =+  doc=tube
  |=
  ^-  *(edge &[p=*sink q=*well])
  ?-  wub
    %crud  %.(doc |~(plug (free %crud) nad))
  ==
::::
::          noft: scan knob, sink and well
    noft
  =+  [hoc=*knob beq=rule]
  |:
  =+  doc=tube
  |=  
  ?-  hoc
    ~   %.(doc |~(plug (free ~) beq))
  ==
::::
::          remp: scan prefix
    remp
  =+  doc=tube
  |=
  ^-  ((give [p=*knob q=*sink r=*well]) doc)
  %.  doc
  |~  plug
    (free ~)
    (cold %crud (just 'r'))
    (cold [%gene %bone ~] (just 'g'))
  ==
::
::::  System interface
::::
::          spar: parse
    spar
  =+  cox=*text
  |=
  ^-  *goal
  :: (done (remp `tube`[tube_(rip 3 cox)]))
  (done (virc `tube`[tube_(rip 3 cox)]))
::::
::          glem: apply well, producing soul
    glem
  =+  wol=*well
  |=
  ^-  *soul
  ?-  wol
      [%gene *]
    =+  vid=(%~(mill rose sut p.sul) p.wol)
    [p.vid .*(q.sul q.vid)]
  ==
::::
::          blor: apply sink and soul, producing core and merds
    blor
  =+  [syn=*sink mal=*soul]
  |=
  ^-  [..vere *(list merd)]
  ?-  syn
    %crud   [..vere {[%turd mal]}]
  ==
::
::::
==

  ++  snub
    ~.  %snub
    |=  [peh-
  ++  play  
    ~.  %play
    =>  .(vet |)
    |=  gen=*gene
    &-  ^-  *type
    ?-    gen
      [%cslc *]  flag
      [%csdg *]  %+  fork 
                   $(sut (gain p.gen), gen q.gen) 
                 $(sut (lose p.gen), gen r.gen)
      [%dgsp *]  (cell $(gen p.gen) $(gen q.gen))
      [%dtlc *]  flag
      [%dtps *]  [%atom %%]
      [%dtsg *]  [%cube q.gen ?:(.?(q.gen) %noun [%atom p.gen])]
      [%dttr *]  %noun
      [%dtwt *]  [%atom p.gen]
      [%ktlc *]  (face p.gen $(gen q.gen))
      [%ktdl *]  (fine %very $(gen p.gen) $(gen ~(late ap gen)))
      [%ktld *]  (fine %pure $(gen p.gen) $(gen ~(late ap gen)))
      [%ktsg *]  $(gen p.gen)
      [%ktsp *]  $(gen p.gen)
      [%lcld *]  $(gen q.gen, sut $(gen p.gen))
      [%mtlc *]  =+  lar=(seeq %read p.gen)
                 =+  fup=(edit q.q.lar q.gen)
                 ?:(=(~ p.q.lar) -<.fup (fire fup))
      [%pmdg *]  (crow %zinc [%dgsp [~ 1] p.gen] q.gen)
      [%pmdt *]  (crow %gold [~ 1] p.gen)
      [%pmmt *]  (crow %lead [~ 1] p.gen)
      [%pmps *]  (crow %iron [%dgsp [~ 1] p.gen] q.gen)
      [%sgld *]  $(gen q.gen)
      [%zpcm *]  (play p.gen)
      [%zpcb *]  ~~((show %o p.gen) $(gen q.gen))  
      [%zpdx *]  ~#($(gen p.gen))
      [%zplc *]  %noun
      [%zpmt ~]  p:seed
      [%zptm *]  (cell $(gen p.gen) $(gen q.gen))
      [%zpzp ~]  %void
      *          =+  doz=~(open ap gen) 
                 ?:  =(doz gen)
                   ~~  (show [%c 'gene'] [%q gen])
                   ~|(%mint-open !!)
                 $(gen doz)
    ==
    ++  crow
      |=  [mel=*{%gold %iron %lead %zinc} ruf=*gene dab=*(map term foot)]
      ^-  *type
      =+  dan=$(gen ruf)
      (core dan mel dan [[0 0] dab])
    ::
    ++  edit
      |=  :*  men=*(list ~[p=*type q=*gate])
              har=*(list ~[p=*gene q=*gene])
          ==
      |-  ^-  [p=*(list ~[p=*type q=*gate]) q=*form]
      ?~  har
        men
      =+  peh=(flop ~(rake ap p.i.har))
      %=  $
        har  t.har
        men  (turn men |=([a=*type b=*gate] [(tack a peh q.i.har) b]))
      ==
    ::
    ++  tack
      |=  [yut=*type peh=*twig rix=*gene]
      ^-  *type
      ?~  peh
        (play rix)
      ?-    i.peh
          @
        =+  wer=(fink(sut yut) %rite i.peh)
        (heal [~ i.peh] p.wer $(peh t.peh, sut p.q.wer))
      ::
          [~ *]
        =+  vas=(peek(sut yut) %rite p.i.peh)
        %^    heal
            ~
          p.i.peh
        $(peh t.peh, yut vas, rix ?~(t.peh (snap(sut vas) rix) rix))
      ==
    --

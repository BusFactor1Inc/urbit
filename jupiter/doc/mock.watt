
++  mock
  ~.  %mock
  |=  [[sub=* fol=*] sky=|+(* *(unit))]
  ^-  %*  $^  [& p=*]
              [| p=*(list)]
          ==
  ?~  fol
    !!
  ?:  ?=(^ -.fol)
    =+  [hed=$(fol -.fol) tal=$(fol +.fol)]
    ?:  -.hed
      ?:  -.tal
        [& p.hed p.tal]
      [| p.tal]
    ?:  -.tal
      [| p.hed]
    [| (weld p.hed p.tal)]
  ?-    -.fol
      [0 b=@]          
    [& .*(sub [0 b.fol])]
  ::
      [1 b=*]          
    [& b.fol]
  ::
      [2 b=* c=*]      
    =+  ben=$(fol [b.fol c.fol])
    ?:  ?=(| -.ben)
      ben
    $(sub +<.ben, fol +>.ben)
  ::
      [3 b=*]          
    =+  ben=$(fol b.fol)
    ?:  ?=(| -.ben)
      ben
    [& .?(+.ben)]
  ::
      [4 b=*]          
    =+  ben=$(fol b.fol)
    ?:  ?=(| -.ben)
      ben
    ?>  ?=(@ +.ben)
    [& .^(+.ben)]
  ::
      [5 b=*]          
    =+  ben=$(fol b.fol)
    ?:  ?=(| -.ben)
      ben
    ?>  ?=(^ +.ben)
    [& =(+<.ben +>.ben)]
  ::
      [6 b=* c=* d=*]  
    $(fol =>(fol [2 [0 1] 2 [1 c d] [1 0] 2 [1 2 3] [1 0] 4 4 b])
  ::
      [7 b=* c=*]     $(fol =>(fol [2 b 1 c]))
      [8 b=* c=*]     $(fol =>(fol [7 [[0 1] b] c]))
      [9 b=* c=*]     $(fol =>(fol [7 c 0 b]))
      [10 @ c=*]      $(fol =>(fol c))
      [10 [* c=*] d]  $(fol =>(fol [8 c 7 [0 2] d]))
  ::
      [11 b=*]
    =+  ben=$(fol b.fol)
    ?:  ?=(| -.ben)
      ben
    =+  val=(sky +.ben)
    ?~(val [| +.ben ~] [& u.val])
  ==

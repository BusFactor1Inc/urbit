!:
|=  [who=lord est=time was=path]
|=  [see=(set ,@tas) say=*]
=>  .(say ((map ,@tas ,*) say))
|=  arg=(list)
:_  ~
=+  ^=  voy  ^-  (list tape)
    :~  "who: {(pave !>(who))}"
        "est: {(pave !>(est))}"
        "was: {(pave !>(was))}"
    ==
::
=+  ^=  lyf  ^-  tape
    %+  weld  "see: "
    =+  fyl=(~(tap by see) ~)
    |-  ^-  tape
    ?~  fyl  ~
    =+  dip=(rip 3 i.fyl)
    ?~  t.fyl  dip
    :(weld dip ", " $(fyl t.fyl))
::
=+  ^=  ruf  ^-  (list tape)
    %+  turn
      (~(tap by say) ~)
    |=  [p=@tas q=*]
    "say: {(pave !>(p))}: {(pave !>(q))}"
::
=+  ^=  gar 
    =+  nix=1
    |-  ^-  (list tape)
    ?~  arg  ~
    :_  $(arg t.arg, nix +(nix))
    "arg: {(pave !>(nix))}: {(pave !>(i.arg))}"
::
(turn :(weld voy [lyf ~] ruf gar) |=(a=tape [%talk %leaf a]))

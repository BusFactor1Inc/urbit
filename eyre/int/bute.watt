!:
~%    %bute
    -<
  ==
    %show-stack    show-stack
    %show-events   show-events
    %show-samples  show-samples
  ==
=>  !% 
=>  &.
    ++  shoe                              ::  trace stack layer
      $^  [%bean *]                       ::  raw noun
          [%mean |.(*tank)]               ::  prettyprint trigger
          [%spot *spot]                   ::  source position
      ==
    ++  shot                              ::  profile path with count
      $~  p=@                             ::  sample count
          q=((list ~[p=(term) q=(shot)])) ::  sample divisions
      ==
    ++  slab                              ::  complete execution record
      $~  p=((list shoe))                 ::  stack trace
          q=*(map term num)               ::  event counter
          r=(shot)                        ::  profile samples
      ==
    --
&.
++  show-stack                                          ::  show trace stack
  |=  wem=*(list shoe)  
  ^-  *tank
  ~|  %show-stack  
  :+  %rose
    [[' ' ~] ['[' ~]  [']' ~]]
  %-  flop
  %+  turn
    wem
  |=  [yos=*shoe]
  ?-  -.yos
    %bean  (show %q +.yos)
    %mean  $:+.yos
    %spot  (show %o +.yos)
  == 
::
++  show-events                                         ::  show event counts
  |=  hoy=*(map term num)
  ^-  *tank
  ~|  %show-events
  :+  %rose
    [[' ' ~] ['{' ~]  ['}' ~]]
  %+  turn
    (sort (~(tap by hoy) ~) |=([p=* q=*] (aor -.p -.q)))
  |=([p=*term q=@] (show [%c p] [%d q]))
::
++  show-samples
  |=  toq=*shot
  ^-  *tank
  ~|  %show-samples
  :+  %rose
    [[' ' ~] ['<' ~]  ['>' ~]]
  ?:  =(~ q.toq)
    [(show %d p.toq) ~]
  %+  turn
    q.toc
  |=  [p=*term q=*shot]
  :+  %palm
    [['.' ~] ['-' ~] ~ ~]
  [[%leaf (mesc (trip p))] $$(toq q) ~]
--

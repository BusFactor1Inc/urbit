
::::
::
    in
  ^<  mine.[!=(->) %in [[%tap !=(tap)] ~]]
  =+  a=*(set)
  |%
  ::::
  ::
      all
    =+  b==+(* |=(?))
    |:  |-
    ^-  ?
    ?~  a
      &
    ?&((b n.a) $(a l.a) $(a r.a))
  ::::
  ::
      any
    =+  b==+(* |=(?))
    |:  |-
    ^-  ?
    ?~  a
      |
    ?|((b n.a) $(a l.a) $(a r.a))
  ::::
  ::
      bus
    ^<  mine.[!(->) %bus ~]
    =+  b==+(? |=(*))
    |:
    =+  c=`a`~
    |-  ^-  a
    ?~  a
      c
    $(a r.a, c $(a l.a, c ?.((b n.a) (~(put in c) n.a) c)))
  ::::
  ::
      cat
    ^<  mine.[!(->) %cat ~]
    =+  b=`a`~
    |:  |-
    =+  c=`a`~
    |-  ^-  a
    ?~  a
      c
    $(a r.a, c $(a l.a, c (~(put in c) n.a)))
  ::::
  ::
      gas
    =+  b=*(list)
    |:  |-
    ^-  a
    ?~  b
      a
    $(b t.b, a (put i.b))
  ::::
  ::
      has
    ^<  mine.[!=(->) %has ~]
    =+  b=*
    |:  |-
    ^-  ?
    ?~  a
      |
    ?:  .=(b n.a)
      &
    ?:  (hor b n.a)
      $(a l.a)
    $(a r.a)
  ::::
  ::
      put
    ^<  mine.[!=(->) %put ~]
    =+  b=*
    |:  |-
    ^-  a
    ?~  a
      [b ~ ~]
    ?:  .=(b n.a)
      a
    ?:  (hor b n.a)
      =+  c=$(a l.a)
      ?>  ?=(^ c)
      ?:  (vor n.a n.c)
        [n.a c r.a]
      [n.c l.c [n.a r.c r.a]]
    =+  c=$(a r.a)
    ?>  ?=(^ c)
    ?:  (vor n.a n.c)
      [n.a l.a c] 
    [n.c [n.a l.a l.c] r.c]
  ::::
  ::
      run
    ^<  mine.[!=(->) %run ~]
    =+  b=&*
    |:
    ^-  *(set b)
    =+  c=`*(set b)`~
    |-
    ?~  a
      c
    $(a r.a, c $(a l.a, c (~(put in c) (b n.a))))
  ::::
  ::
      sub
    ^<  mine.[!(->) %sub ~]
    =+  b==+(? |=(*))
    |:
    =+  c=`a`~
    |-  ^-  a
    ?~  a
      c
    $(a r.a, c $(a l.a, c ?:((b n.a) (~(put in c) n.a) c)))
  ::::
  ::
      tap
    =+  b=*(list)
    |:  |-
    ^-  b
    ?~  a
      b
    $(a r.a, b [n.a $(a l.a)])
  ::::
  ::
      top
    =+  [b=*(list) c=&*]
    |:  |-
    ^-  b
    ?~  a
      b
    $(a r.a, b [(c n.a) $(a l.a)])
  ::
  ::::
  ==

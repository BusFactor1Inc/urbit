::
++  mat
  |=  a=@
  ^-  [p=@ q=@]
  =+  b=(met 0 a)
  =+  c=(met 0 b)
  [(add (add .+(c) c) b) (cat 0 (bex c) (cat 0 b a))]
::
++  mot
  |=  [a=@ b=@]
  ^-  [p=@ q=@]
  =+  c==+(c=`@`0 |-(?.(.=(0 (cut 0 [(add a c) 1] b)) c $(c .+(c)))))
  =+  d=(add a .+(c))
  =+  e=(cut 0 [d c] b)
  [(add (add .+(c) c) e) (cut 0 [(add d c) e] b)]
::


++  cue
  |=  a=@
  ^-  *
  =+  b=(rsh 0 1 a)
  ?:  .=(0 (end 0 1 a))
    b
  =+  c==+(c=`@`0 |-(?.(.=(0 (cut 0 [c 1] b)) c $(c .+(c)))))
  =+  d=(cut 0 [.+(c) c] b)
  =+  e=(rsh 0 (add .+(c) c) b)
  [$(a (end 0 d e)) $(a (rsh 0 d e))]
::
++  jam
  |=  a=*  
  ^-  @
  ?:  ?=(@ a)
  =+  b=$(a -.a) 
  =+  c=(met 0 b)
  (rap 0 [1 (bex (met 0 c)) c b $(a +.a) ~])
    (lsh 0 1 a)
